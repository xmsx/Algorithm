package list;
/**
 * 复杂链表的复制
 * @author MFS
 * 题目：
 * 输入一个复杂链表（每个节点中有节点值，以及两个指针，一个指向下一个节点，
 * 另一个特殊指针指向任意一个节点），返回结果为复制后复杂链表的head。
 * （注意，输出结果中请不要返回参数中的节点引用，否则判题程序会直接返回空）
 * 题解：
 * 
 */
public class CopyRandomListNode {
	public RandomListNode clone(RandomListNode list){
		RandomListNode ans = new RandomListNode(list.label);
		if(list == null) return null;
		ans.random = list.random;
		ans.next = list.next;
		ans.random = clone(list.random);
		ans.next = clone(list.next);
		return ans;
	}

}
